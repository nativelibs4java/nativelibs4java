package com.nativelibs4java.mono.bridj;
import com.nativelibs4java.mono.bridj.MonoLibrary.MonoDisIndenter;
import com.nativelibs4java.mono.bridj.MonoLibrary.MonoDisTokener;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : mono/metadata/debug-helpers.h:12</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("mono") 
public class MonoDisHelper extends StructObject {
	public MonoDisHelper() {
		super();
	}
	public MonoDisHelper(Pointer pointer) {
		super(pointer);
	}
	/// C type : const char*
	@Field(0) 
	public Pointer<Byte > newline() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : const char*
	@Field(0) 
	public MonoDisHelper newline(Pointer<Byte > newline) {
		this.io.setPointerField(this, 0, newline);
		return this;
	}
	/// C type : const char*
	@Field(1) 
	public Pointer<Byte > label_format() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : const char*
	@Field(1) 
	public MonoDisHelper label_format(Pointer<Byte > label_format) {
		this.io.setPointerField(this, 1, label_format);
		return this;
	}
	/// C type : const char*
	@Field(2) 
	public Pointer<Byte > label_target() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : const char*
	@Field(2) 
	public MonoDisHelper label_target(Pointer<Byte > label_target) {
		this.io.setPointerField(this, 2, label_target);
		return this;
	}
	/// C type : MonoDisIndenter
	@Field(3) 
	public Pointer<MonoDisIndenter > indenter() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : MonoDisIndenter
	@Field(3) 
	public MonoDisHelper indenter(Pointer<MonoDisIndenter > indenter) {
		this.io.setPointerField(this, 3, indenter);
		return this;
	}
	/// C type : MonoDisTokener
	@Field(4) 
	public Pointer<MonoDisTokener > tokener() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : MonoDisTokener
	@Field(4) 
	public MonoDisHelper tokener(Pointer<MonoDisTokener > tokener) {
		this.io.setPointerField(this, 4, tokener);
		return this;
	}
	/// C type : void*
	@Field(5) 
	public Pointer<? > user_data() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : void*
	@Field(5) 
	public MonoDisHelper user_data(Pointer<? > user_data) {
		this.io.setPointerField(this, 5, user_data);
		return this;
	}
}
