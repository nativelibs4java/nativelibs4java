package com.nativelibs4java.mono.bridj;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : mono/metadata/debug-mono-symfile.h:54</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("mono") 
public class MonoSymbolFileMethodAddress extends StructObject {
	public MonoSymbolFileMethodAddress() {
		super();
	}
	public MonoSymbolFileMethodAddress(Pointer pointer) {
		super(pointer);
	}
	@Field(0) 
	public int size() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public MonoSymbolFileMethodAddress size(int size) {
		this.io.setIntField(this, 0, size);
		return this;
	}
	/// C type : const uint8_t*
	@Field(1) 
	public Pointer<Byte > start_address() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : const uint8_t*
	@Field(1) 
	public MonoSymbolFileMethodAddress start_address(Pointer<Byte > start_address) {
		this.io.setPointerField(this, 1, start_address);
		return this;
	}
	/// C type : const uint8_t*
	@Field(2) 
	public Pointer<Byte > end_address() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : const uint8_t*
	@Field(2) 
	public MonoSymbolFileMethodAddress end_address(Pointer<Byte > end_address) {
		this.io.setPointerField(this, 2, end_address);
		return this;
	}
	/// C type : const uint8_t*
	@Field(3) 
	public Pointer<Byte > method_start_address() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : const uint8_t*
	@Field(3) 
	public MonoSymbolFileMethodAddress method_start_address(Pointer<Byte > method_start_address) {
		this.io.setPointerField(this, 3, method_start_address);
		return this;
	}
	/// C type : const uint8_t*
	@Field(4) 
	public Pointer<Byte > method_end_address() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : const uint8_t*
	@Field(4) 
	public MonoSymbolFileMethodAddress method_end_address(Pointer<Byte > method_end_address) {
		this.io.setPointerField(this, 4, method_end_address);
		return this;
	}
	/// C type : const uint8_t*
	@Field(5) 
	public Pointer<Byte > wrapper_address() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : const uint8_t*
	@Field(5) 
	public MonoSymbolFileMethodAddress wrapper_address(Pointer<Byte > wrapper_address) {
		this.io.setPointerField(this, 5, wrapper_address);
		return this;
	}
	@Field(6) 
	public int has_this() {
		return this.io.getIntField(this, 6);
	}
	@Field(6) 
	public MonoSymbolFileMethodAddress has_this(int has_this) {
		this.io.setIntField(this, 6, has_this);
		return this;
	}
	@Field(7) 
	public int num_params() {
		return this.io.getIntField(this, 7);
	}
	@Field(7) 
	public MonoSymbolFileMethodAddress num_params(int num_params) {
		this.io.setIntField(this, 7, num_params);
		return this;
	}
	@Field(8) 
	public int variable_table_offset() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public MonoSymbolFileMethodAddress variable_table_offset(int variable_table_offset) {
		this.io.setIntField(this, 8, variable_table_offset);
		return this;
	}
	@Field(9) 
	public int type_table_offset() {
		return this.io.getIntField(this, 9);
	}
	@Field(9) 
	public MonoSymbolFileMethodAddress type_table_offset(int type_table_offset) {
		this.io.setIntField(this, 9, type_table_offset);
		return this;
	}
	@Field(10) 
	public int num_line_numbers() {
		return this.io.getIntField(this, 10);
	}
	@Field(10) 
	public MonoSymbolFileMethodAddress num_line_numbers(int num_line_numbers) {
		this.io.setIntField(this, 10, num_line_numbers);
		return this;
	}
	@Field(11) 
	public int line_number_offset() {
		return this.io.getIntField(this, 11);
	}
	@Field(11) 
	public MonoSymbolFileMethodAddress line_number_offset(int line_number_offset) {
		this.io.setIntField(this, 11, line_number_offset);
		return this;
	}
	/// C type : uint8_t[0]
	@Array({0}) 
	@Field(12) 
	public Pointer<Byte > data() {
		return this.io.getPointerField(this, 12);
	}
}
