package com.nativelibs4java.mono.bridj;
import com.nativelibs4java.mono.bridj.MonoLibrary.MonoClass;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : /Library/Frameworks/Mono.framework/Headers/mono-2.0/mono/metadata/metadata.h:311</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("mono") 
public class MonoArrayType extends StructObject {
	public MonoArrayType() {
		super();
	}
	public MonoArrayType(Pointer pointer) {
		super(pointer);
	}
	/// C type : MonoClass*
	@Field(0) 
	public Pointer<MonoClass > eklass() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : MonoClass*
	@Field(0) 
	public MonoArrayType eklass(Pointer<MonoClass > eklass) {
		this.io.setPointerField(this, 0, eklass);
		return this;
	}
	@Field(1) 
	public byte rank() {
		return this.io.getByteField(this, 1);
	}
	@Field(1) 
	public MonoArrayType rank(byte rank) {
		this.io.setByteField(this, 1, rank);
		return this;
	}
	@Field(2) 
	public byte numsizes() {
		return this.io.getByteField(this, 2);
	}
	@Field(2) 
	public MonoArrayType numsizes(byte numsizes) {
		this.io.setByteField(this, 2, numsizes);
		return this;
	}
	@Field(3) 
	public byte numlobounds() {
		return this.io.getByteField(this, 3);
	}
	@Field(3) 
	public MonoArrayType numlobounds(byte numlobounds) {
		this.io.setByteField(this, 3, numlobounds);
		return this;
	}
	/// C type : int*
	@Field(4) 
	public Pointer<Integer > sizes() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : int*
	@Field(4) 
	public MonoArrayType sizes(Pointer<Integer > sizes) {
		this.io.setPointerField(this, 4, sizes);
		return this;
	}
	/// C type : int*
	@Field(5) 
	public Pointer<Integer > lobounds() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : int*
	@Field(5) 
	public MonoArrayType lobounds(Pointer<Integer > lobounds) {
		this.io.setPointerField(this, 5, lobounds);
		return this;
	}
}
