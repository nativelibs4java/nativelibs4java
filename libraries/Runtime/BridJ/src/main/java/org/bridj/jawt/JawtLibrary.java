package org.bridj.jawt;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.Platform;
import java.io.File;
/**
 * Wrapper for library <b>jawt</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("jawt") 
@Runtime(CRuntime.class) 
class JawtLibrary {
	static {
		BridJ.register();
	}
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_LOCK_CLIP_CHANGED = 2;
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_VERSION_1_4 = 65540;
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_VERSION_1_3 = 65539;
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_LOCK_SURFACE_CHANGED = 8;
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_LOCK_ERROR = 1;
	/// <i>native declaration : jawt.h</i>
	public static final int JAWT_LOCK_BOUNDS_CHANGED = 4;
	public native static boolean JAWT_GetAWT(Pointer<JawtLibrary.JNIEnv > env, Pointer<org.bridj.jawt.JAWT > awt);
	/// Pointer to unknown (opaque) type
	public static class JNIEnv extends TypedPointer {
		public JNIEnv(long address) {
			super(address);
		}
		public JNIEnv(Pointer address) {
			super(address);
		}
	};
}
