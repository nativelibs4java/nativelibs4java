package com.nativelibs4java.ffmpeg.avcodec;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avcodec") 
public class AVPaletteControl extends StructObject {
	public AVPaletteControl() {
		super();
	}
	public AVPaletteControl(Pointer pointer) {
		super(pointer);
	}
	/**
	 * Demuxer sets this to 1 to indicate the palette has changed;<br>
	 * decoder resets to 0.
	 */
	@Field(0) 
	public int palette_changed() {
		return this.io.getIntField(this, 0);
	}
	/**
	 * Demuxer sets this to 1 to indicate the palette has changed;<br>
	 * decoder resets to 0.
	 */
	@Field(0) 
	public AVPaletteControl palette_changed(int palette_changed) {
		this.io.setIntField(this, 0, palette_changed);
		return this;
	}
	public final int palette_changed_$eq(int palette_changed) {
		palette_changed(palette_changed);
		return palette_changed;
	}
	/**
	 * 4-byte ARGB palette entries, stored in native byte order; note that<br>
	 * the individual palette components should be on a 8-bit scale; if<br>
	 * the palette data comes from an IBM VGA native format, the component<br>
	 * data is probably 6 bits in size and needs to be scaled.<br>
	 * C type : unsigned int[256]
	 */
	@Array({256}) 
	@Field(1) 
	public Pointer<Integer > palette() {
		return this.io.getPointerField(this, 1);
	}
}
