package com.nativelibs4java.ffmpeg.avformat;
import com.nativelibs4java.ffmpeg.avcodec.AVPacket;
import static com.nativelibs4java.ffmpeg.avcodec.AvcodecLibrary.*;
import static com.nativelibs4java.ffmpeg.avformat.AvformatLibrary.*;
import com.nativelibs4java.ffmpeg.avutil.AVRational;
import static com.nativelibs4java.ffmpeg.avutil.AvutilLibrary.*;
import static com.nativelibs4java.ffmpeg.swscale.SwscaleLibrary.*;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ValuedEnum;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>avformat</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avformat") 
@Runtime(CPPRuntime.class) 
public class AvformatLibrary {
	static {
		BridJ.register();
	}
	public enum AVStreamParseType implements org.bridj.IntValuedEnum<AVStreamParseType > {
		AVSTREAM_PARSE_NONE(0),
		AVSTREAM_PARSE_FULL(1),
		AVSTREAM_PARSE_HEADERS(2),
		AVSTREAM_PARSE_TIMESTAMPS(3);
		AVStreamParseType(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<AVStreamParseType > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<AVStreamParseType > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVSEEK_FLAG_FRAME = 8;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_DUB = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_GENERIC_INDEX = 256;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVSEEK_FLAG_BACKWARD = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int LIBAVFORMAT_VERSION_MICRO = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVSEEK_FLAG_ANY = 4;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_LYRICS = 16;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_VARIABLE_FPS = 1024;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final java.lang.String LIBAVFORMAT_IDENT = "Lavf";
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_RTP_HINT = 64;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_INFINITEOUTPUTLOOP = 0;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int MAX_PROBE_PACKETS = 2500;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_NOOUTPUTLOOP = -1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_NEEDNUMBER = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_GENPTS = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMTCTX_NOHEADER = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_TS_DISCONT = 512;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_COMMENT = 8;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_NOPARSE = 32;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_METADATA_DONT_STRDUP_KEY = 4;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int LIBAVFORMAT_VERSION_MINOR = 64;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVPROBE_PADDING_SIZE = 32;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_NOTIMESTAMPS = 128;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_DEFAULT = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_GLOBALHEADER = 64;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_NOFILE = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int RAW_PACKET_BUFFER_SIZE = 2500000;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_NONBLOCK = 4;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int FFM_PACKET_SIZE = 4096;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int MAX_STREAMS = 20;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_METADATA_DONT_OVERWRITE = 16;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_PROGRAM_RUNNING = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVSEEK_FLAG_BYTE = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_NOFILLIN = 16;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_IGNIDX = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int LIBAVFORMAT_VERSION_MAJOR = 52;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVINDEX_KEYFRAME = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_METADATA_IGNORE_SUFFIX = 2;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_METADATA_DONT_STRDUP_VAL = 8;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_SHOW_IDS = 8;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVPROBE_SCORE_MAX = 100;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int FF_FDEBUG_TS = 1;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_KARAOKE = 32;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_DISPOSITION_ORIGINAL = 4;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_FLAG_IGNDTS = 8;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_NODIMENSIONS = 2048;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int MAX_REORDER_DELAY = 16;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AVFMT_RAWPICTURE = 32;
	/// <i>native declaration : libavformat/avformat.h</i>
	public static final int AV_METADATA_MATCH_CASE = 1;
	/// <i>native declaration : libavformat/avformat.h:1161</i>
	public static abstract class read_timestamp extends org.bridj.Callback<read_timestamp > {
		public abstract long apply(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > AVFormatContextPtr1, int int1, Pointer<java.lang.Long > int64_tPtr1, long int64_t1);
	};
	public native static void avformat_version();
	public native static Pointer<java.lang.Byte > avformat_configuration();
	public native static Pointer<java.lang.Byte > avformat_license();
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > av_metadata_get(AvformatLibrary.AVMetadata m, Pointer<java.lang.Byte > key, Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > prev, int flags);
	public native static int av_metadata_set(Pointer<AvformatLibrary.AVMetadata > pm, Pointer<java.lang.Byte > key, Pointer<java.lang.Byte > value);
	public native static int av_metadata_set2(Pointer<AvformatLibrary.AVMetadata > pm, Pointer<java.lang.Byte > key, Pointer<java.lang.Byte > value, int flags);
	public native static void av_metadata_conv(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > ctx, AvformatLibrary.AVMetadataConv d_conv, AvformatLibrary.AVMetadataConv s_conv);
	public native static void av_metadata_free(Pointer<AvformatLibrary.AVMetadata > m);
	public native static int av_get_packet(Pointer<? > s, Pointer<AVPacket > pkt, int size);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > av_iformat_next(Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > f);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > av_oformat_next(Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > f);
	public native static ValuedEnum<CodecID > av_guess_image2_codec(Pointer<java.lang.Byte > filename);
	public native static void av_register_input_format(Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > format);
	public native static void av_register_output_format(Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > format);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > guess_stream_format(Pointer<java.lang.Byte > short_name, Pointer<java.lang.Byte > filename, Pointer<java.lang.Byte > mime_type);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > guess_format(Pointer<java.lang.Byte > short_name, Pointer<java.lang.Byte > filename, Pointer<java.lang.Byte > mime_type);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > av_guess_format(Pointer<java.lang.Byte > short_name, Pointer<java.lang.Byte > filename, Pointer<java.lang.Byte > mime_type);
	public native static ValuedEnum<CodecID > av_guess_codec(Pointer<com.nativelibs4java.ffmpeg.avformat.AVOutputFormat > fmt, Pointer<java.lang.Byte > short_name, Pointer<java.lang.Byte > filename, Pointer<java.lang.Byte > mime_type, ValuedEnum<AVMediaType > type);
	public native static void av_hex_dump(AvformatLibrary.FILE f, Pointer<java.lang.Byte > buf, int size);
	public native static void av_hex_dump_log(Pointer<? > avcl, int level, Pointer<java.lang.Byte > buf, int size);
	public native static void av_pkt_dump(AvformatLibrary.FILE f, Pointer<AVPacket > pkt, int dump_payload);
	public native static void av_pkt_dump_log(Pointer<? > avcl, int level, Pointer<AVPacket > pkt, int dump_payload);
	public native static void av_register_all();
	public native static ValuedEnum<CodecID > av_codec_get_id(Pointer<AvformatLibrary.AVCodecTag > tags, int tag);
	public native static int av_codec_get_tag(Pointer<AvformatLibrary.AVCodecTag > tags, ValuedEnum<CodecID > id);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > av_find_input_format(Pointer<java.lang.Byte > short_name);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > av_probe_input_format(Pointer<com.nativelibs4java.ffmpeg.avformat.AVProbeData > pd, int is_opened);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > av_probe_input_format2(Pointer<com.nativelibs4java.ffmpeg.avformat.AVProbeData > pd, int is_opened, Pointer<java.lang.Integer > score_max);
	public native static int av_open_input_stream(Pointer<Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > > ic_ptr, Pointer<? > pb, Pointer<java.lang.Byte > filename, Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > fmt, Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatParameters > ap);
	public native static int av_open_input_file(Pointer<Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > > ic_ptr, Pointer<java.lang.Byte > filename, Pointer<com.nativelibs4java.ffmpeg.avformat.AVInputFormat > fmt, int buf_size, Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatParameters > ap);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > av_alloc_format_context();
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > avformat_alloc_context();
	public native static int av_find_stream_info(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > ic);
	public native static int av_read_packet(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<AVPacket > pkt);
	public native static int av_read_frame(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<AVPacket > pkt);
	public native static int av_seek_frame(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int stream_index, long timestamp, int flags);
	public native static int avformat_seek_file(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int stream_index, long min_ts, long ts, long max_ts, int flags);
	public native static int av_read_play(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static int av_read_pause(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static void av_close_input_stream(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static void av_close_input_file(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVStream > av_new_stream(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int id);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVProgram > av_new_program(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int id);
	public native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVChapter > ff_new_chapter(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int id, AVRational time_base, long start, long end, Pointer<java.lang.Byte > title);
	public native static void av_set_pts_info(Pointer<com.nativelibs4java.ffmpeg.avformat.AVStream > s, int pts_wrap_bits, int pts_num, int pts_den);
	public native static int av_find_default_stream_index(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static int av_index_search_timestamp(Pointer<com.nativelibs4java.ffmpeg.avformat.AVStream > st, long timestamp, int flags);
	public native static void ff_reduce_index(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int stream_index);
	public native static int av_add_index_entry(Pointer<com.nativelibs4java.ffmpeg.avformat.AVStream > st, long pos, long timestamp, int size, int distance, int flags);
	public native static int av_seek_frame_binary(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int stream_index, long target_ts, int flags);
	public native static void av_update_cur_dts(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<com.nativelibs4java.ffmpeg.avformat.AVStream > ref_st, long timestamp);
	public native static long av_gen_search(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, int stream_index, long target_ts, long pos_min, long pos_max, long pos_limit, long ts_min, long ts_max, int flags, Pointer<java.lang.Long > ts_ret, Pointer<AvformatLibrary.read_timestamp > arg1);
	public native static int av_set_parameters(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatParameters > ap);
	public native static int av_write_header(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static int av_write_frame(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<AVPacket > pkt);
	public native static int av_interleaved_write_frame(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<AVPacket > pkt);
	public native static int av_interleave_packet_per_dts(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, Pointer<AVPacket > out, Pointer<AVPacket > pkt, int flush);
	public native static int av_write_trailer(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s);
	public native static void dump_format(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > ic, int index, Pointer<java.lang.Byte > url, int is_output);
	public native static int parse_image_size(Pointer<java.lang.Integer > width_ptr, Pointer<java.lang.Integer > height_ptr, Pointer<java.lang.Byte > str);
	public native static int parse_frame_rate(Pointer<java.lang.Integer > frame_rate, Pointer<java.lang.Integer > frame_rate_base, Pointer<java.lang.Byte > arg);
	public native static long parse_date(Pointer<java.lang.Byte > datestr, int duration);
	public native static long av_gettime();
	public native static long ffm_read_write_index(int fd);
	public native static int ffm_write_write_index(int fd, long pos);
	public native static void ffm_set_write_index(Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > s, long pos, long file_size);
	public native static int find_info_tag(Pointer<java.lang.Byte > arg, int arg_size, Pointer<java.lang.Byte > tag1, Pointer<java.lang.Byte > info);
	public native static int av_get_frame_filename(Pointer<java.lang.Byte > buf, int buf_size, Pointer<java.lang.Byte > path, int number);
	public native static int av_filename_number_test(Pointer<java.lang.Byte > filename);
	public native static int avf_sdp_create(Pointer<Pointer<com.nativelibs4java.ffmpeg.avformat.AVFormatContext > > ac, int n_files, Pointer<java.lang.Byte > buff, int size);
	public native static int av_match_ext(Pointer<java.lang.Byte > filename, Pointer<java.lang.Byte > extensions);
	/// Pointer to unknown (opaque) type
	public static class AVMetadataConv extends org.bridj.TypedPointer {
		public AVMetadataConv(long address) {
			super(address);
		}
		public AVMetadataConv(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	public static class AVCodecTag extends org.bridj.TypedPointer {
		public AVCodecTag(long address) {
			super(address);
		}
		public AVCodecTag(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	public static class FILE extends org.bridj.TypedPointer {
		public FILE(long address) {
			super(address);
		}
		public FILE(Pointer address) {
			super(address);
		}
		public void av_hex_dump(Pointer<java.lang.Byte > buf, int size) {
			AvformatLibrary.av_hex_dump(this.getPeer(), buf, size);
		}
		public void av_pkt_dump(Pointer<AVPacket > pkt, int dump_payload) {
			AvformatLibrary.av_pkt_dump(this.getPeer(), pkt, dump_payload);
		}
	};
	private native static void av_hex_dump(@Ptr long f, Pointer<java.lang.Byte > buf, int size);
	private native static void av_pkt_dump(@Ptr long f, Pointer<AVPacket > pkt, int dump_payload);
	/// Pointer to unknown (opaque) type
	public static class AVMetadata extends org.bridj.TypedPointer {
		public AVMetadata(long address) {
			super(address);
		}
		public AVMetadata(Pointer address) {
			super(address);
		}
		public Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > av_metadata_get(Pointer<java.lang.Byte > key, Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > prev, int flags) {
			return AvformatLibrary.av_metadata_get(this.getPeer(), key, prev, flags);
		}
	};
	private native static Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > av_metadata_get(@Ptr long m, Pointer<java.lang.Byte > key, Pointer<com.nativelibs4java.ffmpeg.avformat.AVMetadataTag > prev, int flags);
}
