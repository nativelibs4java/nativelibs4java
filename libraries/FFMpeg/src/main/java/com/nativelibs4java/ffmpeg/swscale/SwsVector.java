package com.nativelibs4java.ffmpeg.swscale;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libswscale/swscale.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("swscale") 
public class SwsVector extends StructObject {
	public SwsVector() {
		super();
	}
	public SwsVector(Pointer pointer) {
		super(pointer);
	}
	/**
	 * < pointer to the list of coefficients<br>
	 * C type : double*
	 */
	@Field(0) 
	public Pointer<Double > coeff() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * < pointer to the list of coefficients<br>
	 * C type : double*
	 */
	@Field(0) 
	public SwsVector coeff(Pointer<Double > coeff) {
		this.io.setPointerField(this, 0, coeff);
		return this;
	}
	/// C type : double*
	public final Pointer<Double > coeff_$eq(Pointer<Double > coeff) {
		coeff(coeff);
		return coeff;
	}
	/// < number of coefficients in the vector
	@Field(1) 
	public int length() {
		return this.io.getIntField(this, 1);
	}
	/// < number of coefficients in the vector
	@Field(1) 
	public SwsVector length(int length) {
		this.io.setIntField(this, 1, length);
		return this;
	}
	public final int length_$eq(int length) {
		length(length);
		return length;
	}
}
