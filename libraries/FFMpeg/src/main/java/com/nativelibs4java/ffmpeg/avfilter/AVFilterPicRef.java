package com.nativelibs4java.ffmpeg.avfilter;
import com.nativelibs4java.ffmpeg.avutil.AVRational;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavfilter/avfilter.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avfilter") 
public class AVFilterPicRef extends StructObject {
	public AVFilterPicRef() {
		super();
	}
	public AVFilterPicRef(Pointer pointer) {
		super(pointer);
	}
	/**
	 * < the picture that this is a reference to<br>
	 * C type : AVFilterPic*
	 */
	@Field(0) 
	public Pointer<com.nativelibs4java.ffmpeg.avfilter.AVFilterPic > pic() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * < the picture that this is a reference to<br>
	 * C type : AVFilterPic*
	 */
	@Field(0) 
	public AVFilterPicRef pic(Pointer<com.nativelibs4java.ffmpeg.avfilter.AVFilterPic > pic) {
		this.io.setPointerField(this, 0, pic);
		return this;
	}
	/// C type : AVFilterPic*
	public final Pointer<com.nativelibs4java.ffmpeg.avfilter.AVFilterPic > pic_$eq(Pointer<com.nativelibs4java.ffmpeg.avfilter.AVFilterPic > pic) {
		pic(pic);
		return pic;
	}
	/**
	 * < picture data for each plane<br>
	 * C type : uint8_t*[4]
	 */
	@Array({4}) 
	@Field(1) 
	public Pointer<Pointer<java.lang.Byte > > data() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * < number of bytes per line<br>
	 * C type : int[4]
	 */
	@Array({4}) 
	@Field(2) 
	public Pointer<java.lang.Integer > linesize() {
		return this.io.getPointerField(this, 2);
	}
	/// < image width
	@Field(3) 
	public int w() {
		return this.io.getIntField(this, 3);
	}
	/// < image width
	@Field(3) 
	public AVFilterPicRef w(int w) {
		this.io.setIntField(this, 3, w);
		return this;
	}
	public final int w_$eq(int w) {
		w(w);
		return w;
	}
	/// < image height
	@Field(4) 
	public int h() {
		return this.io.getIntField(this, 4);
	}
	/// < image height
	@Field(4) 
	public AVFilterPicRef h(int h) {
		this.io.setIntField(this, 4, h);
		return this;
	}
	public final int h_$eq(int h) {
		h(h);
		return h;
	}
	/// < presentation timestamp in units of 1/AV_TIME_BASE
	@Field(5) 
	public long pts() {
		return this.io.getLongField(this, 5);
	}
	/// < presentation timestamp in units of 1/AV_TIME_BASE
	@Field(5) 
	public AVFilterPicRef pts(long pts) {
		this.io.setLongField(this, 5, pts);
		return this;
	}
	public final long pts_$eq(long pts) {
		pts(pts);
		return pts;
	}
	/// < byte position in stream, -1 if unknown
	@Field(6) 
	public long pos() {
		return this.io.getLongField(this, 6);
	}
	/// < byte position in stream, -1 if unknown
	@Field(6) 
	public AVFilterPicRef pos(long pos) {
		this.io.setLongField(this, 6, pos);
		return this;
	}
	public final long pos_$eq(long pos) {
		pos(pos);
		return pos;
	}
	/**
	 * < pixel aspect ratio<br>
	 * C type : AVRational
	 */
	@Field(7) 
	public AVRational pixel_aspect() {
		return this.io.getNativeObjectField(this, 7);
	}
	/// < permissions
	@Field(8) 
	public int perms() {
		return this.io.getIntField(this, 8);
	}
	/// < permissions
	@Field(8) 
	public AVFilterPicRef perms(int perms) {
		this.io.setIntField(this, 8, perms);
		return this;
	}
	public final int perms_$eq(int perms) {
		perms(perms);
		return perms;
	}
}
