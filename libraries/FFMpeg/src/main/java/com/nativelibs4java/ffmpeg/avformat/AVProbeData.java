package com.nativelibs4java.ffmpeg.avformat;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavformat/avformat.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avformat") 
public class AVProbeData extends StructObject {
	public AVProbeData() {
		super();
	}
	public AVProbeData(Pointer pointer) {
		super(pointer);
	}
	/// C type : const char*
	@Field(0) 
	public Pointer<java.lang.Byte > filename() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : const char*
	@Field(0) 
	public AVProbeData filename(Pointer<java.lang.Byte > filename) {
		this.io.setPointerField(this, 0, filename);
		return this;
	}
	/// C type : const char*
	public final Pointer<java.lang.Byte > filename_$eq(Pointer<java.lang.Byte > filename) {
		filename(filename);
		return filename;
	}
	/**
	 * < Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero.<br>
	 * C type : unsigned char*
	 */
	@Field(1) 
	public Pointer<java.lang.Byte > buf() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * < Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero.<br>
	 * C type : unsigned char*
	 */
	@Field(1) 
	public AVProbeData buf(Pointer<java.lang.Byte > buf) {
		this.io.setPointerField(this, 1, buf);
		return this;
	}
	/// C type : unsigned char*
	public final Pointer<java.lang.Byte > buf_$eq(Pointer<java.lang.Byte > buf) {
		buf(buf);
		return buf;
	}
	/// < Size of buf except extra allocated bytes
	@Field(2) 
	public int buf_size() {
		return this.io.getIntField(this, 2);
	}
	/// < Size of buf except extra allocated bytes
	@Field(2) 
	public AVProbeData buf_size(int buf_size) {
		this.io.setIntField(this, 2, buf_size);
		return this;
	}
	public final int buf_size_$eq(int buf_size) {
		buf_size(buf_size);
		return buf_size;
	}
}
