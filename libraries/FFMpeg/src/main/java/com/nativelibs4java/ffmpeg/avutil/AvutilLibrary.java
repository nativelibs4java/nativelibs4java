package com.nativelibs4java.ffmpeg.avutil;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ValuedEnum;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>avutil</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avutil") 
@Runtime(CPPRuntime.class) 
public class AvutilLibrary {
	static {
		BridJ.register();
	}
	public enum AVMediaType implements IntValuedEnum<AVMediaType > {
		AVMEDIA_TYPE_UNKNOWN(-1),
		AVMEDIA_TYPE_VIDEO(0),
		AVMEDIA_TYPE_AUDIO(1),
		AVMEDIA_TYPE_DATA(2),
		AVMEDIA_TYPE_SUBTITLE(3),
		AVMEDIA_TYPE_ATTACHMENT(4),
		AVMEDIA_TYPE_NB(5);
		AVMediaType(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<AVMediaType > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<AVMediaType > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};

	public enum PixelFormat implements IntValuedEnum<PixelFormat > {
		PIX_FMT_NONE(-1),
		PIX_FMT_YUV420P(0),
		PIX_FMT_YUYV422(1),
		PIX_FMT_RGB24(2),
		PIX_FMT_BGR24(3),
		PIX_FMT_YUV422P(4),
		PIX_FMT_YUV444P(5),
		PIX_FMT_YUV410P(6),
		PIX_FMT_YUV411P(7),
		PIX_FMT_GRAY8(8),
		PIX_FMT_MONOWHITE(9),
		PIX_FMT_MONOBLACK(10),
		PIX_FMT_PAL8(11),
		PIX_FMT_YUVJ420P(12),
		PIX_FMT_YUVJ422P(13),
		PIX_FMT_YUVJ444P(14),
		PIX_FMT_XVMC_MPEG2_MC(15),
		PIX_FMT_XVMC_MPEG2_IDCT(16),
		PIX_FMT_UYVY422(17),
		PIX_FMT_UYYVYY411(18),
		PIX_FMT_BGR8(19),
		PIX_FMT_BGR4(20),
		PIX_FMT_BGR4_BYTE(21),
		PIX_FMT_RGB8(22),
		PIX_FMT_RGB4(23),
		PIX_FMT_RGB4_BYTE(24),
		PIX_FMT_NV12(25),
		PIX_FMT_NV21(26),
		PIX_FMT_ARGB(27),
		PIX_FMT_RGBA(28),
		PIX_FMT_ABGR(29),
		PIX_FMT_BGRA(30),
		PIX_FMT_GRAY16BE(31),
		PIX_FMT_GRAY16LE(32),
		PIX_FMT_YUV440P(33),
		PIX_FMT_YUVJ440P(34),
		PIX_FMT_YUVA420P(35),
		PIX_FMT_VDPAU_H264(36),
		PIX_FMT_VDPAU_MPEG1(37),
		PIX_FMT_VDPAU_MPEG2(38),
		PIX_FMT_VDPAU_WMV3(39),
		PIX_FMT_VDPAU_VC1(40),
		PIX_FMT_RGB48BE(41),
		PIX_FMT_RGB48LE(42),
		PIX_FMT_RGB565BE(43),
		PIX_FMT_RGB565LE(44),
		PIX_FMT_RGB555BE(45),
		PIX_FMT_RGB555LE(46),
		PIX_FMT_BGR565BE(47),
		PIX_FMT_BGR565LE(48),
		PIX_FMT_BGR555BE(49),
		PIX_FMT_BGR555LE(50),
		PIX_FMT_VAAPI_MOCO(51),
		PIX_FMT_VAAPI_IDCT(52),
		PIX_FMT_VAAPI_VLD(53),
		PIX_FMT_YUV420P16LE(54),
		PIX_FMT_YUV420P16BE(55),
		PIX_FMT_YUV422P16LE(56),
		PIX_FMT_YUV422P16BE(57),
		PIX_FMT_YUV444P16LE(58),
		PIX_FMT_YUV444P16BE(59),
		PIX_FMT_VDPAU_MPEG4(60),
		PIX_FMT_DXVA2_VLD(61),
		PIX_FMT_RGB444BE(62),
		PIX_FMT_RGB444LE(63),
		PIX_FMT_BGR444BE(64),
		PIX_FMT_BGR444LE(65),
		PIX_FMT_Y400A(66),
		PIX_FMT_NB(67);
		PixelFormat(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<PixelFormat > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<PixelFormat > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/// <i>native declaration : ./libavutil/avutil.h</i>
	public static final int LIBAVUTIL_VERSION_MAJOR = 50;
	/// <i>native declaration : libavutil/avutil.h</i>
	public static final int LIBAVUTIL_VERSION_MINOR = 15;
	/// <i>native declaration : libavutil/avutil.h</i>
	public static final java.lang.String LIBAVUTIL_IDENT = "Lavu";
	/// <i>native declaration : libavutil/avutil.h</i>
	public static final int LIBAVUTIL_VERSION_MICRO = 1;
	public native static int av_reduce(Pointer<java.lang.Integer > dst_num, Pointer<java.lang.Integer > dst_den, long num, long den, long max);
	public native static com.nativelibs4java.ffmpeg.avutil.AVRational av_mul_q(com.nativelibs4java.ffmpeg.avutil.AVRational b, com.nativelibs4java.ffmpeg.avutil.AVRational c);
	public native static com.nativelibs4java.ffmpeg.avutil.AVRational av_div_q(com.nativelibs4java.ffmpeg.avutil.AVRational b, com.nativelibs4java.ffmpeg.avutil.AVRational c);
	public native static com.nativelibs4java.ffmpeg.avutil.AVRational av_add_q(com.nativelibs4java.ffmpeg.avutil.AVRational b, com.nativelibs4java.ffmpeg.avutil.AVRational c);
	public native static com.nativelibs4java.ffmpeg.avutil.AVRational av_sub_q(com.nativelibs4java.ffmpeg.avutil.AVRational b, com.nativelibs4java.ffmpeg.avutil.AVRational c);
	public native static com.nativelibs4java.ffmpeg.avutil.AVRational av_d2q(double d, int max);
	public native static int av_nearer_q(com.nativelibs4java.ffmpeg.avutil.AVRational q, com.nativelibs4java.ffmpeg.avutil.AVRational q1, com.nativelibs4java.ffmpeg.avutil.AVRational q2);
	public native static int av_find_nearest_q_idx(com.nativelibs4java.ffmpeg.avutil.AVRational q, Pointer<com.nativelibs4java.ffmpeg.avutil.AVRational > q_list);
	public native static void avutil_version();
	public native static Pointer<java.lang.Byte > avutil_configuration();
	public native static Pointer<java.lang.Byte > avutil_license();
}
