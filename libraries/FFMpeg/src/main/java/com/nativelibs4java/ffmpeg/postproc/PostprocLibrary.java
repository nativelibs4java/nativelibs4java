package com.nativelibs4java.ffmpeg.postproc;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>postproc</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("postproc") 
@Runtime(CPPRuntime.class) 
public class PostprocLibrary {
	static {
		BridJ.register();
	}
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_CPU_CAPS_ALTIVEC = 268435456;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int LIBPOSTPROC_VERSION_MINOR = 2;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_QUALITY_MAX = 6;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_CPU_CAPS_3DNOW = 1073741824;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_CPU_CAPS_MMX2 = 536870912;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_CPU_CAPS_MMX = -2147483648;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_FORMAT = 8;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_PICT_TYPE_QP2 = 16;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final java.lang.String LIBPOSTPROC_IDENT = "postproc";
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int LIBPOSTPROC_VERSION_MICRO = 0;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int LIBPOSTPROC_VERSION_MAJOR = 51;
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_FORMAT_411 = (2 | PostprocLibrary.PP_FORMAT);
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_FORMAT_420 = (17 | PostprocLibrary.PP_FORMAT);
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_FORMAT_422 = (1 | PostprocLibrary.PP_FORMAT);
	/// <i>native declaration : libpostproc/postprocess.h</i>
	public static final int PP_FORMAT_444 = (0 | PostprocLibrary.PP_FORMAT);
	public native static void postproc_version();
	public native static Pointer<java.lang.Byte > postproc_configuration();
	public native static Pointer<java.lang.Byte > postproc_license();
	public native static void pp_postprocess(Pointer<Pointer<java.lang.Byte > > src, Pointer<java.lang.Integer > srcStride, Pointer<Pointer<java.lang.Byte > > dst, Pointer<java.lang.Integer > dstStride, int horizontalSize, int verticalSize, Pointer<java.lang.Byte > QP_store, int QP_stride, Pointer<? > mode, Pointer<? > ppContext, int pict_type);
	public native static Pointer<? > pp_get_mode_by_name_and_quality(Pointer<java.lang.Byte > name, int quality);
	public native static void pp_free_mode(Pointer<? > mode);
	public native static Pointer<? > pp_get_context(int width, int height, int flags);
	public native static void pp_free_context(Pointer<? > ppContext);
	/// < a simple help text
	//public static final GlobalPointerType<ByteByReference > pp_help = new GlobalPointerType<ByteByReference >(this, com.sun.jna.ptr.ByteByReference.class, "pp_help");
}
