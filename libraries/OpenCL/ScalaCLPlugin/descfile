
	ScalaCL Plugin is a compiler plugin that makes your programs faster.
	It optimizes general Scala constructs and ScalaCL / OpenCL programs in particular.
	
Website:
	http://scalacl.googlecode.com/
	
Author: 
	Olivier Chafik <olivier.chafik@gmail.com>
	http://ochafik.free.fr/blog/
	http://twitter.com/ochafik

Current general optimizations include :
- Rewrite of int range foreach loops into faster while loops
- Rewrite of List/Array[T].foreach into while loops (for T being primitive or AnyRef)
- Rewrite of Array[T].map into while loops
- Rewrite of List[T].foldLeft and Array[T].foldLeft/foldRight into while loops
- Rewrite of List[T].reduceLeft and Array[T].reduceLeft/reduceRight into while loops
- Rewrite of List[T].scanLeft and Array[T].scanLeft/scanRight into while loops
- Rewrite of Array.tabulate(m, n, ...)((i, j, ...) => body) into while loops

Current ScalaCL / OpenCL-specific optimizations include :
- Transforming Scala functions given to CLCol[T].map, foreach and filter into OpenCL kernels (supports only limited inline lambdas)

More optimizations are scheduled, such as :
- Autovectorization of ScalaCL loops
- Auto-ScalaCL-ization of general code (upon explicit demand via a compiler option, as this introduces runtime dependency on ScalaCL)
- Support for external references in ScalaCL functions, including external calls (when target is invariant and can be converted to OpenCL)

Please use NativeLibs4Java's user group and bug-tracker for feedback or help about ScalaCL and its compiler plugin :
http://groups.google.fr/group/nativelibs4java/
http://code.google.com/p/nativelibs4java/issues/list
