package com.nativelibs4java.directx.d3d10;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ValuedEnum;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>d3d10</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("d3d10") 
@Runtime(CPPRuntime.class) 
public class D3d10Library {
	static {
		BridJ.register();
	}
	public enum D3D10_INPUT_CLASSIFICATION implements IntValuedEnum<D3D10_INPUT_CLASSIFICATION > {
		D3D10_INPUT_PER_VERTEX_DATA(0),
		D3D10_INPUT_PER_INSTANCE_DATA(1);
		D3D10_INPUT_CLASSIFICATION(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_INPUT_CLASSIFICATION > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_INPUT_CLASSIFICATION > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_FILL_MODE implements IntValuedEnum<D3D10_FILL_MODE > {
		D3D10_FILL_WIREFRAME(2),
		D3D10_FILL_SOLID(3);
		D3D10_FILL_MODE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_FILL_MODE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_FILL_MODE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_PRIMITIVE_TOPOLOGY implements IntValuedEnum<D3D10_PRIMITIVE_TOPOLOGY > {
		D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED(0),
		D3D10_PRIMITIVE_TOPOLOGY_POINTLIST(1),
		D3D10_PRIMITIVE_TOPOLOGY_LINELIST(2),
		D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP(3),
		D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST(4),
		D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP(5),
		D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ(10),
		D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ(11),
		D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ(12),
		D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ(13);
		D3D10_PRIMITIVE_TOPOLOGY(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_PRIMITIVE_TOPOLOGY > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_PRIMITIVE_TOPOLOGY > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_PRIMITIVE implements IntValuedEnum<D3D10_PRIMITIVE > {
		D3D10_PRIMITIVE_UNDEFINED(0),
		D3D10_PRIMITIVE_POINT(1),
		D3D10_PRIMITIVE_LINE(2),
		D3D10_PRIMITIVE_TRIANGLE(3),
		D3D10_PRIMITIVE_LINE_ADJ(6),
		D3D10_PRIMITIVE_TRIANGLE_ADJ(7);
		D3D10_PRIMITIVE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_PRIMITIVE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_PRIMITIVE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_CULL_MODE implements IntValuedEnum<D3D10_CULL_MODE > {
		D3D10_CULL_NONE(1),
		D3D10_CULL_FRONT(2),
		D3D10_CULL_BACK(3);
		D3D10_CULL_MODE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_CULL_MODE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_CULL_MODE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_RESOURCE_DIMENSION implements IntValuedEnum<D3D10_RESOURCE_DIMENSION > {
		D3D10_RESOURCE_DIMENSION_UNKNOWN(0),
		D3D10_RESOURCE_DIMENSION_BUFFER(1),
		D3D10_RESOURCE_DIMENSION_TEXTURE1D(2),
		D3D10_RESOURCE_DIMENSION_TEXTURE2D(3),
		D3D10_RESOURCE_DIMENSION_TEXTURE3D(4);
		D3D10_RESOURCE_DIMENSION(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_RESOURCE_DIMENSION > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_RESOURCE_DIMENSION > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_SRV_DIMENSION implements IntValuedEnum<D3D10_SRV_DIMENSION > {
		D3D10_SRV_DIMENSION_UNKNOWN(0),
		D3D10_SRV_DIMENSION_BUFFER(1),
		D3D10_SRV_DIMENSION_TEXTURE1D(2),
		D3D10_SRV_DIMENSION_TEXTURE1DARRAY(3),
		D3D10_SRV_DIMENSION_TEXTURE2D(4),
		D3D10_SRV_DIMENSION_TEXTURE2DARRAY(5),
		D3D10_SRV_DIMENSION_TEXTURE2DMS(6),
		D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY(7),
		D3D10_SRV_DIMENSION_TEXTURE3D(8),
		D3D10_SRV_DIMENSION_TEXTURECUBE(9);
		D3D10_SRV_DIMENSION(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_SRV_DIMENSION > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_SRV_DIMENSION > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_DSV_DIMENSION implements IntValuedEnum<D3D10_DSV_DIMENSION > {
		D3D10_DSV_DIMENSION_UNKNOWN(0),
		D3D10_DSV_DIMENSION_TEXTURE1D(1),
		D3D10_DSV_DIMENSION_TEXTURE1DARRAY(2),
		D3D10_DSV_DIMENSION_TEXTURE2D(3),
		D3D10_DSV_DIMENSION_TEXTURE2DARRAY(4),
		D3D10_DSV_DIMENSION_TEXTURE2DMS(5),
		D3D10_DSV_DIMENSION_TEXTURE2DMSARRAY(6);
		D3D10_DSV_DIMENSION(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_DSV_DIMENSION > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_DSV_DIMENSION > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_RTV_DIMENSION implements IntValuedEnum<D3D10_RTV_DIMENSION > {
		D3D10_RTV_DIMENSION_UNKNOWN(0),
		D3D10_RTV_DIMENSION_BUFFER(1),
		D3D10_RTV_DIMENSION_TEXTURE1D(2),
		D3D10_RTV_DIMENSION_TEXTURE1DARRAY(3),
		D3D10_RTV_DIMENSION_TEXTURE2D(4),
		D3D10_RTV_DIMENSION_TEXTURE2DARRAY(5),
		D3D10_RTV_DIMENSION_TEXTURE2DMS(6),
		D3D10_RTV_DIMENSION_TEXTURE2DMSARRAY(7),
		D3D10_RTV_DIMENSION_TEXTURE3D(8);
		D3D10_RTV_DIMENSION(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_RTV_DIMENSION > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_RTV_DIMENSION > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_USAGE implements IntValuedEnum<D3D10_USAGE > {
		D3D10_USAGE_DEFAULT(0),
		D3D10_USAGE_IMMUTABLE(1),
		D3D10_USAGE_DYNAMIC(2),
		D3D10_USAGE_STAGING(3);
		D3D10_USAGE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_USAGE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_USAGE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_BIND_FLAG implements IntValuedEnum<D3D10_BIND_FLAG > {
		D3D10_BIND_VERTEX_BUFFER(0x1),
		D3D10_BIND_INDEX_BUFFER(0x2),
		D3D10_BIND_CONSTANT_BUFFER(0x4),
		D3D10_BIND_SHADER_RESOURCE(0x8),
		D3D10_BIND_STREAM_OUTPUT(0x10),
		D3D10_BIND_RENDER_TARGET(0x20),
		D3D10_BIND_DEPTH_STENCIL(0x40);
		D3D10_BIND_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_BIND_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_BIND_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_CPU_ACCESS_FLAG implements IntValuedEnum<D3D10_CPU_ACCESS_FLAG > {
		D3D10_CPU_ACCESS_WRITE(0x10000),
		D3D10_CPU_ACCESS_READ(0x20000);
		D3D10_CPU_ACCESS_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_CPU_ACCESS_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_CPU_ACCESS_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_RESOURCE_MISC_FLAG implements IntValuedEnum<D3D10_RESOURCE_MISC_FLAG > {
		D3D10_RESOURCE_MISC_GENERATE_MIPS(0x1),
		D3D10_RESOURCE_MISC_SHARED(0x2),
		D3D10_RESOURCE_MISC_TEXTURECUBE(0x4),
		D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX(0x10),
		D3D10_RESOURCE_MISC_GDI_COMPATIBLE(0x20);
		D3D10_RESOURCE_MISC_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_RESOURCE_MISC_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_RESOURCE_MISC_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_MAP implements IntValuedEnum<D3D10_MAP > {
		D3D10_MAP_READ(1),
		D3D10_MAP_WRITE(2),
		D3D10_MAP_READ_WRITE(3),
		D3D10_MAP_WRITE_DISCARD(4),
		D3D10_MAP_WRITE_NO_OVERWRITE(5);
		D3D10_MAP(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_MAP > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_MAP > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_MAP_FLAG implements IntValuedEnum<D3D10_MAP_FLAG > {
		D3D10_MAP_FLAG_DO_NOT_WAIT(0x100000);
		D3D10_MAP_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_MAP_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_MAP_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_RAISE_FLAG implements IntValuedEnum<D3D10_RAISE_FLAG > {
		D3D10_RAISE_FLAG_DRIVER_INTERNAL_ERROR(0x1);
		D3D10_RAISE_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_RAISE_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_RAISE_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_CLEAR_FLAG implements IntValuedEnum<D3D10_CLEAR_FLAG > {
		D3D10_CLEAR_DEPTH(0x1),
		D3D10_CLEAR_STENCIL(0x2);
		D3D10_CLEAR_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_CLEAR_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_CLEAR_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_COMPARISON_FUNC implements IntValuedEnum<D3D10_COMPARISON_FUNC > {
		D3D10_COMPARISON_NEVER(1),
		D3D10_COMPARISON_LESS(2),
		D3D10_COMPARISON_EQUAL(3),
		D3D10_COMPARISON_LESS_EQUAL(4),
		D3D10_COMPARISON_GREATER(5),
		D3D10_COMPARISON_NOT_EQUAL(6),
		D3D10_COMPARISON_GREATER_EQUAL(7),
		D3D10_COMPARISON_ALWAYS(8);
		D3D10_COMPARISON_FUNC(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_COMPARISON_FUNC > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_COMPARISON_FUNC > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_DEPTH_WRITE_MASK implements IntValuedEnum<D3D10_DEPTH_WRITE_MASK > {
		D3D10_DEPTH_WRITE_MASK_ZERO(0),
		D3D10_DEPTH_WRITE_MASK_ALL(1);
		D3D10_DEPTH_WRITE_MASK(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_DEPTH_WRITE_MASK > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_DEPTH_WRITE_MASK > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_STENCIL_OP implements IntValuedEnum<D3D10_STENCIL_OP > {
		D3D10_STENCIL_OP_KEEP(1),
		D3D10_STENCIL_OP_ZERO(2),
		D3D10_STENCIL_OP_REPLACE(3),
		D3D10_STENCIL_OP_INCR_SAT(4),
		D3D10_STENCIL_OP_DECR_SAT(5),
		D3D10_STENCIL_OP_INVERT(6),
		D3D10_STENCIL_OP_INCR(7),
		D3D10_STENCIL_OP_DECR(8);
		D3D10_STENCIL_OP(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_STENCIL_OP > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_STENCIL_OP > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_BLEND implements IntValuedEnum<D3D10_BLEND > {
		D3D10_BLEND_ZERO(1),
		D3D10_BLEND_ONE(2),
		D3D10_BLEND_SRC_COLOR(3),
		D3D10_BLEND_INV_SRC_COLOR(4),
		D3D10_BLEND_SRC_ALPHA(5),
		D3D10_BLEND_INV_SRC_ALPHA(6),
		D3D10_BLEND_DEST_ALPHA(7),
		D3D10_BLEND_INV_DEST_ALPHA(8),
		D3D10_BLEND_DEST_COLOR(9),
		D3D10_BLEND_INV_DEST_COLOR(10),
		D3D10_BLEND_SRC_ALPHA_SAT(11),
		D3D10_BLEND_BLEND_FACTOR(14),
		D3D10_BLEND_INV_BLEND_FACTOR(15),
		D3D10_BLEND_SRC1_COLOR(16),
		D3D10_BLEND_INV_SRC1_COLOR(17),
		D3D10_BLEND_SRC1_ALPHA(18),
		D3D10_BLEND_INV_SRC1_ALPHA(19);
		D3D10_BLEND(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_BLEND > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_BLEND > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_BLEND_OP implements IntValuedEnum<D3D10_BLEND_OP > {
		D3D10_BLEND_OP_ADD(1),
		D3D10_BLEND_OP_SUBTRACT(2),
		D3D10_BLEND_OP_REV_SUBTRACT(3),
		D3D10_BLEND_OP_MIN(4),
		D3D10_BLEND_OP_MAX(5);
		D3D10_BLEND_OP(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_BLEND_OP > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_BLEND_OP > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_COLOR_WRITE_ENABLE implements IntValuedEnum<D3D10_COLOR_WRITE_ENABLE > {
		D3D10_COLOR_WRITE_ENABLE_RED(1),
		D3D10_COLOR_WRITE_ENABLE_GREEN(2),
		D3D10_COLOR_WRITE_ENABLE_BLUE(4),
		D3D10_COLOR_WRITE_ENABLE_ALPHA(8),
		D3D10_COLOR_WRITE_ENABLE_ALL((((D3D10_COLOR_WRITE_ENABLE_RED.value() | D3D10_COLOR_WRITE_ENABLE_GREEN.value()) | D3D10_COLOR_WRITE_ENABLE_BLUE.value()) | D3D10_COLOR_WRITE_ENABLE_ALPHA.value()));
		D3D10_COLOR_WRITE_ENABLE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_COLOR_WRITE_ENABLE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_COLOR_WRITE_ENABLE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_TEXTURECUBE_FACE implements IntValuedEnum<D3D10_TEXTURECUBE_FACE > {
		D3D10_TEXTURECUBE_FACE_POSITIVE_X(0),
		D3D10_TEXTURECUBE_FACE_NEGATIVE_X(1),
		D3D10_TEXTURECUBE_FACE_POSITIVE_Y(2),
		D3D10_TEXTURECUBE_FACE_NEGATIVE_Y(3),
		D3D10_TEXTURECUBE_FACE_POSITIVE_Z(4),
		D3D10_TEXTURECUBE_FACE_NEGATIVE_Z(5);
		D3D10_TEXTURECUBE_FACE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_TEXTURECUBE_FACE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_TEXTURECUBE_FACE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_FILTER implements IntValuedEnum<D3D10_FILTER > {
		D3D10_FILTER_MIN_MAG_MIP_POINT(0),
		D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR(0x1),
		D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT(0x4),
		D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR(0x5),
		D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT(0x10),
		D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR(0x11),
		D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT(0x14),
		D3D10_FILTER_MIN_MAG_MIP_LINEAR(0x15),
		D3D10_FILTER_ANISOTROPIC(0x55),
		D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT(0x80),
		D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR(0x81),
		D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT(0x84),
		D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR(0x85),
		D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT(0x90),
		D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR(0x91),
		D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT(0x94),
		D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR(0x95),
		D3D10_FILTER_COMPARISON_ANISOTROPIC(0xD5),
		D3D10_FILTER_TEXT_1BIT(0x80000000);
		D3D10_FILTER(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_FILTER > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_FILTER > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_FILTER_TYPE implements IntValuedEnum<D3D10_FILTER_TYPE > {
		D3D10_FILTER_TYPE_POINT(0),
		D3D10_FILTER_TYPE_LINEAR(1);
		D3D10_FILTER_TYPE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_FILTER_TYPE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_FILTER_TYPE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_TEXTURE_ADDRESS_MODE implements IntValuedEnum<D3D10_TEXTURE_ADDRESS_MODE > {
		D3D10_TEXTURE_ADDRESS_WRAP(1),
		D3D10_TEXTURE_ADDRESS_MIRROR(2),
		D3D10_TEXTURE_ADDRESS_CLAMP(3),
		D3D10_TEXTURE_ADDRESS_BORDER(4),
		D3D10_TEXTURE_ADDRESS_MIRROR_ONCE(5);
		D3D10_TEXTURE_ADDRESS_MODE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_TEXTURE_ADDRESS_MODE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_TEXTURE_ADDRESS_MODE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_FORMAT_SUPPORT implements IntValuedEnum<D3D10_FORMAT_SUPPORT > {
		D3D10_FORMAT_SUPPORT_BUFFER(0x1),
		D3D10_FORMAT_SUPPORT_IA_VERTEX_BUFFER(0x2),
		D3D10_FORMAT_SUPPORT_IA_INDEX_BUFFER(0x4),
		D3D10_FORMAT_SUPPORT_SO_BUFFER(0x8),
		D3D10_FORMAT_SUPPORT_TEXTURE1D(0x10),
		D3D10_FORMAT_SUPPORT_TEXTURE2D(0x20),
		D3D10_FORMAT_SUPPORT_TEXTURE3D(0x40),
		D3D10_FORMAT_SUPPORT_TEXTURECUBE(0x80),
		D3D10_FORMAT_SUPPORT_SHADER_LOAD(0x100),
		D3D10_FORMAT_SUPPORT_SHADER_SAMPLE(0x200),
		D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON(0x400),
		D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT(0x800),
		D3D10_FORMAT_SUPPORT_MIP(0x1000),
		D3D10_FORMAT_SUPPORT_MIP_AUTOGEN(0x2000),
		D3D10_FORMAT_SUPPORT_RENDER_TARGET(0x4000),
		D3D10_FORMAT_SUPPORT_BLENDABLE(0x8000),
		D3D10_FORMAT_SUPPORT_DEPTH_STENCIL(0x10000),
		D3D10_FORMAT_SUPPORT_CPU_LOCKABLE(0x20000),
		D3D10_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE(0x40000),
		D3D10_FORMAT_SUPPORT_DISPLAY(0x80000),
		D3D10_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT(0x100000),
		D3D10_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET(0x200000),
		D3D10_FORMAT_SUPPORT_MULTISAMPLE_LOAD(0x400000),
		D3D10_FORMAT_SUPPORT_SHADER_GATHER(0x800000),
		D3D10_FORMAT_SUPPORT_BACK_BUFFER_CAST(0x1000000);
		D3D10_FORMAT_SUPPORT(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_FORMAT_SUPPORT > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_FORMAT_SUPPORT > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_ASYNC_GETDATA_FLAG implements IntValuedEnum<D3D10_ASYNC_GETDATA_FLAG > {
		D3D10_ASYNC_GETDATA_DONOTFLUSH(0x1);
		D3D10_ASYNC_GETDATA_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_ASYNC_GETDATA_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_ASYNC_GETDATA_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_QUERY implements IntValuedEnum<D3D10_QUERY > {
		D3D10_QUERY_EVENT(0),
		D3D10_QUERY_OCCLUSION((D3D10_QUERY_EVENT.value() + 1)),
		D3D10_QUERY_TIMESTAMP((D3D10_QUERY_OCCLUSION.value() + 1)),
		D3D10_QUERY_TIMESTAMP_DISJOINT((D3D10_QUERY_TIMESTAMP.value() + 1)),
		D3D10_QUERY_PIPELINE_STATISTICS((D3D10_QUERY_TIMESTAMP_DISJOINT.value() + 1)),
		D3D10_QUERY_OCCLUSION_PREDICATE((D3D10_QUERY_PIPELINE_STATISTICS.value() + 1)),
		D3D10_QUERY_SO_STATISTICS((D3D10_QUERY_OCCLUSION_PREDICATE.value() + 1)),
		D3D10_QUERY_SO_OVERFLOW_PREDICATE((D3D10_QUERY_SO_STATISTICS.value() + 1));
		D3D10_QUERY(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_QUERY > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_QUERY > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_QUERY_MISC_FLAG implements IntValuedEnum<D3D10_QUERY_MISC_FLAG > {
		D3D10_QUERY_MISC_PREDICATEHINT(0x1);
		D3D10_QUERY_MISC_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_QUERY_MISC_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_QUERY_MISC_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_COUNTER implements IntValuedEnum<D3D10_COUNTER > {
		D3D10_COUNTER_GPU_IDLE(0),
		D3D10_COUNTER_VERTEX_PROCESSING((D3D10_COUNTER_GPU_IDLE.value() + 1)),
		D3D10_COUNTER_GEOMETRY_PROCESSING((D3D10_COUNTER_VERTEX_PROCESSING.value() + 1)),
		D3D10_COUNTER_PIXEL_PROCESSING((D3D10_COUNTER_GEOMETRY_PROCESSING.value() + 1)),
		D3D10_COUNTER_OTHER_GPU_PROCESSING((D3D10_COUNTER_PIXEL_PROCESSING.value() + 1)),
		D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION((D3D10_COUNTER_OTHER_GPU_PROCESSING.value() + 1)),
		D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION((D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION.value() + 1)),
		D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION((D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION.value() + 1)),
		D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION((D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION.value() + 1)),
		D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION((D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION.value() + 1)),
		D3D10_COUNTER_VS_MEMORY_LIMITED((D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION.value() + 1)),
		D3D10_COUNTER_VS_COMPUTATION_LIMITED((D3D10_COUNTER_VS_MEMORY_LIMITED.value() + 1)),
		D3D10_COUNTER_GS_MEMORY_LIMITED((D3D10_COUNTER_VS_COMPUTATION_LIMITED.value() + 1)),
		D3D10_COUNTER_GS_COMPUTATION_LIMITED((D3D10_COUNTER_GS_MEMORY_LIMITED.value() + 1)),
		D3D10_COUNTER_PS_MEMORY_LIMITED((D3D10_COUNTER_GS_COMPUTATION_LIMITED.value() + 1)),
		D3D10_COUNTER_PS_COMPUTATION_LIMITED((D3D10_COUNTER_PS_MEMORY_LIMITED.value() + 1)),
		D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE((D3D10_COUNTER_PS_COMPUTATION_LIMITED.value() + 1)),
		D3D10_COUNTER_TEXTURE_CACHE_HIT_RATE((D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE.value() + 1)),
		D3D10_COUNTER_DEVICE_DEPENDENT_0(0x40000000);
		D3D10_COUNTER(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_COUNTER > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_COUNTER > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_COUNTER_TYPE implements IntValuedEnum<D3D10_COUNTER_TYPE > {
		D3D10_COUNTER_TYPE_FLOAT32(0),
		D3D10_COUNTER_TYPE_UINT16((D3D10_COUNTER_TYPE_FLOAT32.value() + 1)),
		D3D10_COUNTER_TYPE_UINT32((D3D10_COUNTER_TYPE_UINT16.value() + 1)),
		D3D10_COUNTER_TYPE_UINT64((D3D10_COUNTER_TYPE_UINT32.value() + 1));
		D3D10_COUNTER_TYPE(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_COUNTER_TYPE > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_COUNTER_TYPE > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public enum D3D10_CREATE_DEVICE_FLAG implements IntValuedEnum<D3D10_CREATE_DEVICE_FLAG > {
		D3D10_CREATE_DEVICE_SINGLETHREADED(0x1),
		D3D10_CREATE_DEVICE_DEBUG(0x2),
		D3D10_CREATE_DEVICE_SWITCH_TO_REF(0x4),
		D3D10_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS(0x8),
		D3D10_CREATE_DEVICE_ALLOW_NULL_FROM_MAP(0x10),
		D3D10_CREATE_DEVICE_BGRA_SUPPORT(0x20),
		D3D10_CREATE_DEVICE_STRICT_VALIDATION(0x200);
		D3D10_CREATE_DEVICE_FLAG(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<D3D10_CREATE_DEVICE_FLAG > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static ValuedEnum<D3D10_CREATE_DEVICE_FLAG > fromValue(long value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE = (int)(-8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SHADER_MINOR_VERSION = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = (int)(5);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION = (int)(8192);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SUBTEXEL_FRACTIONAL_BIT_COUNT = (int)(6);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_OUTPUT_REGISTER_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURECUBE_DIMENSION = (int)(8192);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_VIEWPORT_WIDTH = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_RESOURCE_SIZE_IN_MEGABYTES = (int)(128);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SDK_VERSION = (int)(29);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SUBPIXEL_FRACTIONAL_BIT_COUNT = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MAX_BORDER_COLOR_COMPONENT = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PIXEL_ADDRESS_RANGE_BIT_COUNT = (int)(13);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_REGISTER_COUNT = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_FRONTFACING_FALSE_VALUE = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_SAMPLE_MASK = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT = (int)(15);
	/// <i>native declaration : d3d10.h</i>
	public static final int __REQUIRED_RPCSAL_H_VERSION__ = (int)100;
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT = (int)(14);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_32BIT_INDEX_STRIP_CUT_VALUE = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MAX_DEPTH = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D_SPEC_DATE_MONTH = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES = (int)(256);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH = (int)(8192);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_FRONTFACING_TRUE_VALUE = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D_SPEC_DATE_YEAR = (int)(2006);
	/// <i>native declaration : d3d10.h</i>
	public static final double D3D_SPEC_VERSION = (double)(1.050005);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_DEPTH_REGISTER_COUNT = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_BLEND_FACTOR_RED = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_EXPONENT = (float)(2.4F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MIN_DEPTH = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_OUTPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_OFFSET = (float)(0.055F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_RENDER_TARGET_ARRAY_INDEX = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_PRIM_CONST_REGISTER_COUNT = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_INPUT_REGISTER_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FTOU_INSTRUCTION_MAX_INPUT = (float)(4.2949673E9F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MIP_FILTER_SHIFT = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_READS_PER_INST = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FTOI_INSTRUCTION_MIN_INPUT = (float)(-2.14748365E9F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_MAXANISOTROPY = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_INSTANCE_ID_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MAG_FILTER_SHIFT = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_CLIP_OR_CULL_DISTANCE_COUNT = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_OFFSET = (float)(0.055F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MIP_LOD_FRACTIONAL_BIT_COUNT = (int)(6);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_INPUT_REGISTER_READS_PER_INST = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_BLEND_OBJECT_COUNT_PER_CONTEXT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_8BIT_INDEX_STRIP_CUT_VALUE = (int)(255);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_VERTEX_ELEMENT_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_UNBOUND_MEMORY_ACCESS_RESULT = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION = (int)(512);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_BUFFER_SLOT_COUNT = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_DRAW_VERTEX_COUNT_2_TO_EXP = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_VIEWPORT_MIN_DEPTH = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_CONTEXT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_COMPONENT_BIT_COUNT_DOUBLED = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION = (int)(8192);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_THRESHOLD = (float)(0.0031308F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP = (float)(0.6F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_FILTER_TYPE_MASK = (int)(3);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_FRONTFACING_DEFAULT_VALUE = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_EXPONENT_NUMERATOR = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_DEPTH_BIAS_CLAMP = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_MAX_ANISOTROPY = (float)(16.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int _FACD3D10 = (int)(2169);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT = (int)(15);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_GAMMA = (float)(2.2F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SAMPLER_REGISTER_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_SCISSOR_STARTX = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_SCISSOR_STARTY = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_INPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final double D3D10_FLOAT16_FUSED_TOLERANCE_IN_ULP = (double)(0.6);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MAX_MULTISAMPLE_SAMPLE_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D_MAJOR_VERSION = (int)(10);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D_MINOR_VERSION = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_VIEWPORT_HEIGHT = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_RASTERIZER_OBJECT_COUNT_PER_CONTEXT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_BLEND_FACTOR_GREEN = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D_SPEC_DATE_DAY = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_PRIMITIVE_ID_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEMP_REGISTER_COUNT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FTOI_INSTRUCTION_MAX_INPUT = (float)(2.14748365E9F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_MIP_LOD_BIAS = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES = (int)(2048);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_INPUT_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MAX_MAXANISOTROPY = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MIP_LOD_RANGE_BIT_COUNT = (int)(8);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_OUTPUT_ELEMENTS = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MULTISAMPLE_ANTIALIAS_LINE_WIDTH = (float)(1.4F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT = (int)(128);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_TOLERANCE_IN_ULP = (float)(0.5F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_RESOURCE_VIEW_COUNT_PER_CONTEXT_2_TO_EXP = (int)(20);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_INTEGER_DIVIDE_BY_ZERO_REMAINDER = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_SCISSOR_ENDX = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_SCISSOR_ENDY = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_PIXEL_ELEMENT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MIN_FILTER_SHIFT = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT = (int)(9);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT = (float)(0.5F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_DENOMINATOR_1 = (float)(12.92F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_DENOMINATOR_2 = (float)(1.055F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MIN_MAXANISOTROPY = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_APPEND_ALIGNED_ELEMENT = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SHADER_MAJOR_VERSION = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SUBROUTINE_NESTING_LIMIT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEMP_REGISTER_READS_PER_INST = (int)(3);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_SCALE_1 = (float)(12.92F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_SCALE_2 = (float)(1.055F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_DEFAULT_PRIMITIVE_TOPOLOGY = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION = (int)(512);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_VIEWPORT_MAX_DEPTH = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT = (int)(15);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_TEXT_1BIT_BIT = (int)(-2147483648);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_STENCIL_WRITE_MASK = (int)(255);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN = (int)(-10);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_TEXEL_ADDRESS_RANGE_BIT_COUNT = (int)(18);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT32_MAX = (float)(3.4028235E38F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MIP_LOD_BIAS_MAX = (float)(15.99F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_MIP_LEVELS = (int)(14);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_INPUT_REGISTER_READ_PORTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_PIXEL_COMPONENT_COUNT = (int)(128);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MIP_LOD_BIAS_MIN = (float)(-16.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_MAX_TEXTURE_DIMENSION_2_TO_EXP = (int)(17);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX = (int)(10);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP = (int)(27);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_DEPTH_BIAS = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_BLEND_FACTOR_ALPHA = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MIN_BORDER_COLOR_COMPONENT = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_STENCIL_REFERENCE = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_SLOPE_SCALED_DEPTH_BIAS = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_OUTPUT_REGISTER_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP = (int)(25);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_VERTEX_ID_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = (int)(25);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR = (float)(2.4F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_INPUT_REGISTER_READS_PER_INST = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_16BIT_INDEX_STRIP_CUT_VALUE = (int)(65535);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEMP_REGISTER_READ_PORTS = (int)(3);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_CONSTANT_BUFFER_ELEMENT_COUNT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_INTEGER_DIVIDE_BY_ZERO_QUOTIENT = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int __REQUIRED_RPCNDR_H_VERSION__ = (int)500;
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_VIEWPORT_TOPLEFTY = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_VIEWPORT_TOPLEFTX = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_VERTICES = (int)(6);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_SAMPLER_OBJECT_COUNT_PER_CONTEXT = (int)(4096);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST = (int)(2);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_DDI_REGISTER_INDEX_DENOTING_GAP = (int)(-1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT = (int)(128);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_IA_INTEGER_ARITHMETIC_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VIEWPORT_BOUNDS_MIN = (int)(-16384);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_FTOU_INSTRUCTION_MIN_INPUT = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VS_OUTPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS = (int)(1);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_DEFAULT_STENCIL_READ_MASK = (int)(255);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT = (int)(16);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SO_BUFFER_MAX_STRIDE_IN_BYTES = (int)(2048);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VIEWPORT_BOUNDS_MAX = (int)(16383);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT = (int)(1024);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_INPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_ANISOTROPIC_FILTERING_BIT = (int)(64);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE = (int)(7);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_BLEND_FACTOR_BLUE = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURE1D_U_DIMENSION = (int)(8192);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_DEFAULT_BORDER_COLOR_COMPONENT = (float)(0.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_PS_INPUT_REGISTER_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_COMPARISON_FILTERING_BIT = (int)(128);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT = (int)(10);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_VIEWPORT_AND_SCISSORRECT_MAX_INDEX = (int)(15);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_SRGB_TO_FLOAT_THRESHOLD = (float)(0.04045F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_SHIFT_INSTRUCTION_PAD_VALUE = (int)(0);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_REGISTER_COMPONENTS = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_MAX_POSITION_VALUE = (float)(3.4028236E34F);
	/// <i>native declaration : d3d10.h</i>
	public static final float D3D10_LINEAR_GAMMA = (float)(1.0F);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_STANDARD_VECTOR_SIZE = (int)(4);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = (int)(2048);
	/// <i>native declaration : d3d10.h</i>
	public static final int D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT = (int)(32);
	/// <i>native declaration : d3d10.h</i>
	public static final int _FACD3D10DEBUG = (int)(D3d10Library._FACD3D10 + 1);
	/// <i>native declaration : d3d10.h:0</i>
	public static final int D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT = (int)D3d10Library.D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT;
	/// <i>native declaration : d3d10.h:0</i>
	public static final int D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT = (int)D3d10Library.D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT;
	public static native int D3D10CalcSubresource(int MipSlice, int ArraySlice, int MipLevels);
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0004_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0004_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0024_v0_0_c_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public Pointer<? > __MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern RPC_IF_HANDLE
	public D3d10Library __MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec(Pointer<? > __MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec) {
		try {
			{
				BridJ.getNativeLibrary("d3d10").getSymbolPointer("__MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec").as(org.bridj.util.DefaultParameterizedType.paramType(org.bridj.Pointer.class, null)).set(__MIDL_itf_d3d10_0000_0024_v0_0_s_ifspec);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// Undefined type
	public static interface IUnknown {
		
	};
	/// Undefined type
	public static interface GUID {
		
	};
	/// Undefined type
	public static interface RECT {
		
	};
}
